# MCP Configuration for ${{ values.serviceName }}
# This configuration works with the production MCP server from bayer-int/mcp-servers

# MCP Server Connection
mcp_url: "http://localhost:8000/mcp"  # Local development
# mcp_url: "https://your-lambda-url.amazonaws.com/mcp"  # AWS Lambda deployment

# Authentication (for production deployment)
# auth_token: "your-api-key-here"  # Uncomment and set for secure deployments

# MCP Server Configuration
mcp_server:
  type: "${{ values.mcpType }}"
  {% if values.mcpType == "postgres" %}
  default_schema: "public"
  {% endif %}
  {% if values.mcpType == "ms-sql" %}
  default_schema: "dbo"
  {% endif %}
  
  # Security settings (matches MCP server defaults)
  read_only: true
  max_rows: 100
  
  # Connection timeout settings
  timeout: 30
  retry_attempts: 3

# ML Service Integration Settings
ml_service:
  name: "${{ values.serviceName }}"
  owner: "${{ values.owner }}"
  
  # Default tables for training data
  training_tables:
    {% if values.mcpType == "postgres" %}
    - "training_data"
    - "features"
    - "labels"
    {% endif %}
    {% if values.mcpType == "ms-sql" %}
    - "DP_training_data"  # Tables with DP prefix
    - "DP_features"
    - "DP_labels"
    {% endif %}
  
  # Feature validation
  required_columns:
    - "id"
    - "created_at"
    - "updated_at"

# Logging and Monitoring
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR
  mcp_debug: false
  
monitoring:
  health_check_interval: 300  # seconds
  enable_metrics: true

{% if values.environmentVariables %}
# Custom Configuration
custom:
  {% for key, value in values.environmentVariables %}
  ${{ key }}: "${{ value }}"
  {% endfor %}
{% endif %}

# Environment-specific overrides
# Uncomment and modify for different environments

# development:
#   mcp_url: "http://localhost:8000/mcp"
#   logging:
#     level: "DEBUG"
#     mcp_debug: true

# staging:
#   mcp_url: "https://staging-mcp.example.com/mcp"
#   auth_token: "staging-token"

# production:
#   mcp_url: "https://prod-mcp.example.com/mcp"
#   auth_token: "prod-token"
#   monitoring:
#     enable_metrics: true
